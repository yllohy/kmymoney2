/****************************************************************************
** KTransactionView meta object code from reading C++ file 'ktransactionview.h'
**
** Created: Thu Dec 28 02:45:08 2000
**      by: The Qt MOC ($Id: ktransactionview.moc,v 1.1 2001/03/07 19:48:59 mte Exp $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#define Q_MOC_KTransactionView
#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 9
#elif Q_MOC_OUTPUT_REVISION != 9
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "./ktransactionview.h"
#include <qmetaobject.h>
#include <qapplication.h>

#if defined(Q_SPARCWORKS_FUNCP_BUG)
#define Q_AMPERSAND
#else
#define Q_AMPERSAND &
#endif


const char *KTransactionView::className() const
{
    return "KTransactionView";
}

QMetaObject *KTransactionView::metaObj = 0;

void KTransactionView::initMetaObject()
{
    if ( metaObj )
	return;
    if ( qstrcmp(QWidget::className(), "QWidget") != 0 )
	badSuperclassWarning("KTransactionView","QWidget");
    (void) staticMetaObject();
}

#ifndef QT_NO_TRANSLATION

QString KTransactionView::tr(const char* s)
{
    return qApp->translate( "KTransactionView", s, 0 );
}

QString KTransactionView::tr(const char* s, const char * c)
{
    return qApp->translate( "KTransactionView", s, c );
}

#endif // QT_NO_TRANSLATION

QMetaObject* KTransactionView::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    (void) QWidget::staticMetaObject();
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    typedef void(KTransactionView::*m1_t0)(MyMoneyTransaction&,bool);
    typedef void(KTransactionView::*m1_t1)(QListViewItem*,const QPoint&,int);
    typedef void(KTransactionView::*m1_t2)();
    m1_t0 v1_0 = Q_AMPERSAND KTransactionView::slotInputEnter;
    m1_t1 v1_1 = Q_AMPERSAND KTransactionView::slotFocusChange;
    m1_t2 v1_2 = Q_AMPERSAND KTransactionView::slotUpdateNeeded;
    QMetaData *slot_tbl = QMetaObject::new_metadata(3);
    QMetaData::Access *slot_tbl_access = QMetaObject::new_metaaccess(3);
    slot_tbl[0].name = "slotInputEnter(MyMoneyTransaction&,bool)";
    slot_tbl[0].ptr = (QMember)v1_0;
    slot_tbl_access[0] = QMetaData::Protected;
    slot_tbl[1].name = "slotFocusChange(QListViewItem*,const QPoint&,int)";
    slot_tbl[1].ptr = (QMember)v1_1;
    slot_tbl_access[1] = QMetaData::Protected;
    slot_tbl[2].name = "slotUpdateNeeded()";
    slot_tbl[2].ptr = (QMember)v1_2;
    slot_tbl_access[2] = QMetaData::Protected;
    typedef void(KTransactionView::*m2_t0)(const MyMoneyTransaction&,bool);
    typedef void(KTransactionView::*m2_t1)();
    m2_t0 v2_0 = Q_AMPERSAND KTransactionView::enterBtnClicked;
    m2_t1 v2_1 = Q_AMPERSAND KTransactionView::updateNeeded;
    QMetaData *signal_tbl = QMetaObject::new_metadata(2);
    signal_tbl[0].name = "enterBtnClicked(const MyMoneyTransaction&,bool)";
    signal_tbl[0].ptr = (QMember)v2_0;
    signal_tbl[1].name = "updateNeeded()";
    signal_tbl[1].ptr = (QMember)v2_1;
    metaObj = QMetaObject::new_metaobject(
	"KTransactionView", "QWidget",
	slot_tbl, 3,
	signal_tbl, 2,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    metaObj->set_slot_access( slot_tbl_access );
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    return metaObj;
}

#include <qobjectdefs.h>
#include <qsignalslotimp.h>

// SIGNAL enterBtnClicked
void KTransactionView::enterBtnClicked( const MyMoneyTransaction& t0, bool t1 )
{
    // No builtin function for signal parameter type const MyMoneyTransaction&,bool
    QConnectionList *clist = receivers("enterBtnClicked(const MyMoneyTransaction&,bool)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef void (QObject::*RT1)(const MyMoneyTransaction&);
    typedef void (QObject::*RT2)(const MyMoneyTransaction&,bool);
    RT0 r0;
    RT1 r1;
    RT2 r2;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
#ifdef Q_FP_CCAST_BROKEN
		r0 = reinterpret_cast<RT0>(*(c->member()));
#else
		r0 = (RT0)*(c->member());
#endif
		(object->*r0)();
		break;
	    case 1:
#ifdef Q_FP_CCAST_BROKEN
		r1 = reinterpret_cast<RT1>(*(c->member()));
#else
		r1 = (RT1)*(c->member());
#endif
		(object->*r1)(t0);
		break;
	    case 2:
#ifdef Q_FP_CCAST_BROKEN
		r2 = reinterpret_cast<RT2>(*(c->member()));
#else
		r2 = (RT2)*(c->member());
#endif
		(object->*r2)(t0, t1);
		break;
	}
    }
}

// SIGNAL updateNeeded
void KTransactionView::updateNeeded()
{
    activate_signal( "updateNeeded()" );
}
